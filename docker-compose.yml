services:
  database:
    image: mysql:8.0
    container_name: todo_database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: todo_app
      MYSQL_USER: todo_user
      MYSQL_PASSWORD: todo_password
    volumes:
      - todo_db_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      backend_network:
        aliases:
          - database

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: todo_backend
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      DATABASE_URL: "mysql://todo_user:todo_password@database:3306/todo_app?serverVersion=8.0&charset=utf8mb4"
      APP_ENV: dev
      APP_SECRET: '50fb3bb9768d21fd22176c3887cbcca5'
    volumes:
      - ./backend:/var/www/html
    networks:
      backend_network:
        aliases:
          - backend
      frontend_network:
        aliases:
          - backend
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: todo_frontend
    volumes:
      - frontend_build:/app/dist
    networks:
      - frontend_network

  nginx:
    image: nginx:alpine
    container_name: todo_nginx
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
    volumes:
      - ./backend:/var/www/html
      - frontend_build:/var/www/frontend
      - ./backend/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:80"
    networks:
      - frontend_network
      
volumes:
  todo_db_data:
  frontend_build:

networks:
  backend_network:
    driver: bridge
    internal: true
  
  frontend_network:
    driver: bridge
